(progn
  (defun dg-ensime-toggle-semantic-highlight ()
    (interactive)
    (let* ((new-value (not ensime-sem-high-enabled-p))
           (state (if new-value "on" "off"))
           (current-file (buffer-file-name)))
      (setq ensime-sem-high-enabled-p new-value)
      (kill-buffer)
      (find-file current-file)
      (message (format "Ensime: turning semantic highlighting %s" state))))

  (define-key ensime-mode-map (vconcat ensime-mode-key-prefix [?\C-v h]) 'dg-ensime-toggle-semantic-highlight))

(face-spec-set 'ensime-compile-infoline '((t (:inherit nil))))
(setq  ensime-sem-high-faces
       '((var . scala-font-lock:var-face)
         (val :inherit font-lock-constant-face :slant italic)
         (varField . scala-font-lock:var-face)
         (valField :inherit font-lock-constant-face :slant italic)
         (functionCall . font-lock-function-name-face)
         (operator . font-lock-keyword-face)
         (param :slant italic)
         (class . font-lock-type-face)
         (trait :inherit font-lock-type-face :slant italic)
         (object . font-lock-constant-face)
         (package . font-lock-preprocessor-face)
         (implicitConversion . nil)
         (implicitParams . nil)
         (deprecated :strike-through "dark gray")))

(let ((prefix-map (make-sparse-keymap)))
  (define-key prefix-map (kbd "v i") 'ensime-inspect-type-at-point)
  (define-key prefix-map (kbd "v 5 i")
    'ensime-inspect-type-at-point-other-frame)
  (define-key prefix-map (kbd "v p") 'ensime-inspect-package-at-point)
  (define-key prefix-map (kbd "v o") 'ensime-inspect-project-package)
  (define-key prefix-map (kbd "v r") 'ensime-show-uses-of-symbol-at-point)
  (define-key prefix-map (kbd "v s") 'ensime-sbt-switch)
  (define-key prefix-map (kbd "v z") 'ensime-inf-switch)
  (define-key prefix-map (kbd "v f") 'ensime-format-source)
  (define-key prefix-map (kbd "v u") 'ensime-undo-peek)
  (define-key prefix-map (kbd "v v") 'ensime-search)
  (define-key prefix-map (kbd "v d") 'ensime-show-doc-for-symbol-at-point)
  (define-key prefix-map (kbd "v D") 'ensime-project-docs)
  (define-key prefix-map (kbd "v t") 'ensime-print-type-at-point)
  (define-key prefix-map (kbd "v e") 'ensime-print-errors-at-point)
  (define-key prefix-map (kbd "v .") 'ensime-expand-selection-command)

  (define-key prefix-map (kbd "v C-r") 'ensime-inf-eval-region)
  (define-key prefix-map (kbd "v b") 'ensime-inf-eval-buffer)
  (define-key prefix-map (kbd "v l") 'ensime-inf-load-file)

  (define-key prefix-map (kbd "c c") 'ensime-typecheck-current-file)
  (define-key prefix-map (kbd "c a") 'ensime-typecheck-all)
  (define-key prefix-map (kbd "c r") 'ensime-reload-open-files)
  (define-key prefix-map (kbd "c e") 'ensime-show-all-errors-and-warnings)

  (define-key prefix-map (kbd "t t") 'ensime-goto-test)
  (define-key prefix-map (kbd "t i") 'ensime-goto-impl)

  (define-key prefix-map (kbd "d d") 'ensime-db-start)
  (define-key prefix-map (kbd "d b") 'ensime-db-set-break)
  (define-key prefix-map (kbd "d u") 'ensime-db-clear-break)
  (define-key prefix-map (kbd "d s") 'ensime-db-step)
  (define-key prefix-map (kbd "d o") 'ensime-db-step-out)
  (define-key prefix-map (kbd "d n") 'ensime-db-next)
  (define-key prefix-map (kbd "d r") 'ensime-db-run)
  (define-key prefix-map (kbd "d c") 'ensime-db-continue)
  (define-key prefix-map (kbd "d q") 'ensime-db-quit)
  (define-key prefix-map (kbd "d i") 'ensime-db-inspect-value-at-point)
  (define-key prefix-map (kbd "d t") 'ensime-db-backtrace)
  (define-key prefix-map (kbd "d a") 'ensime-db-clear-all-breaks)

  (define-key prefix-map (kbd "b s") 'ensime-sbt-switch)
  (define-key prefix-map (kbd "b S") 'ensime-stacktrace-switch)
  (define-key prefix-map (kbd "b c") 'ensime-sbt-do-compile)
  (define-key prefix-map (kbd "b n") 'ensime-sbt-do-clean)
  (define-key prefix-map (kbd "b o") 'ensime-sbt-do-test-only)
  (define-key prefix-map (kbd "b p") 'ensime-sbt-do-package)
  (define-key prefix-map (kbd "b r") 'ensime-sbt-do-run)
  (define-key prefix-map (kbd "b T") 'ensime-sbt-do-test)
  (define-key prefix-map (kbd "b t") 'ensime-sbt-do-test-quick)

  (define-key prefix-map (kbd "d u") 'ensime-db-clear-break)
  (define-key prefix-map (kbd "d s") 'ensime-db-step)
  (define-key prefix-map (kbd "d n") 'ensime-db-next)
  (define-key prefix-map (kbd "d r") 'ensime-db-run)
  (define-key prefix-map (kbd "d c") 'ensime-db-continue)
  (define-key prefix-map (kbd "d q") 'ensime-db-quit)
  (define-key prefix-map (kbd "d l") 'ensime-db-list-locals)

  (define-key prefix-map (kbd "r r") 'ensime-refactor-rename)
  (define-key prefix-map (kbd "r o") 'ensime-refactor-organize-imports)
  (define-key prefix-map (kbd "r l") 'ensime-refactor-extract-local)
  (define-key prefix-map (kbd "r m") 'ensime-refactor-extract-method)
  (define-key prefix-map (kbd "r i") 'ensime-refactor-inline-local)
  (define-key prefix-map (kbd "r p") 'ensime-import-type-at-point)
  (define-key prefix-map (kbd "r t") 'ensime-import-type-at-point)

  (key-chord-define-global "zc" prefix-map))

(provide 'dg-ensime)
